/*
рд╕рдорд╕реНрдпрд╛ рдХреА рд╡реНрдпрд╛рдЦреНрдпрд╛ (Problem Explanation)
рд╣рдорд╛рд░реЗ рдкрд╛рд╕ рдПрдХ рд╢рдмреНрдж рд╕реНрдЯреНрд░рд┐рдВрдЧ (Word String) рд╣реИред
рд╣реИрд░реА (Harry) рдПрдХ рд╕рдВрдЦреНрдпрд╛ M рдЪреБрдирддрд╛ рд╣реИ, рдЬреЛ рдпрд╣ рджрд░реНрд╢рд╛рддреА рд╣реИ рдХрд┐ рд╡рд╣ рдЕрдВрдд рд╕реЗ рдХрд┐рддрдиреЗ рдЕрдХреНрд╖рд░ (letters) рдХрд╛рдЯреЗрдЧрд╛ред
рдкреЙрдЯрд░ (Potter) рдПрдХ рд╕рдВрдЦреНрдпрд╛ N рдЪреБрдирддрд╛ рд╣реИ, рдЬреЛ рдпрд╣ рджрд░реНрд╢рд╛рддреА рд╣реИ рдХрд┐ рд╡рд╣ рдЕрдВрдд рд╕реЗ рдХрд┐рддрдиреЗ рдЕрдХреНрд╖рд░ рдХрд╛рдЯреЗрдЧрд╛ред
рдкреНрд░рдХреНрд░рд┐рдпрд╛ (Process) рдЗрд╕ рдкреНрд░рдХрд╛рд░ рд╣реИ:
рд╣реИрд░реА рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреЗ рдЕрдВрдд рд╕реЗ M рдЕрдХреНрд╖рд░ рдХрд╛рдЯрдХрд░ рдЙрдиреНрд╣реЗрдВ рд╢реБрд░реБрдЖрдд рдореЗрдВ рдЬреЛрдбрд╝ рджреЗрддрд╛ рд╣реИред
рдлрд┐рд░ рдкреЙрдЯрд░ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреЗ рдЕрдВрдд рд╕реЗ N рдЕрдХреНрд╖рд░ рдХрд╛рдЯрдХрд░ рдЙрдиреНрд╣реЗрдВ рд╢реБрд░реБрдЖрдд рдореЗрдВ рдЬреЛрдбрд╝ рджреЗрддрд╛ рд╣реИред
рдпрд╣ рдкреНрд░рдХреНрд░рд┐рдпрд╛ рддрдм рддрдХ рджреЛрд╣рд░рд╛рдИ рдЬрд╛рддреА рд╣реИ рдЬрдм рддрдХ рдХрд┐ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдлрд┐рд░ рд╕реЗ рдЕрдкрдиреА рдореВрд▓ рд╕реНрдерд┐рддрд┐ рдореЗрдВ рдирд╣реАрдВ рдЖ рдЬрд╛рддреАред
рд╣рдореЗрдВ рдпрд╣ рдЧрд┐рдирдирд╛ рд╣реИ рдХрд┐ рдпрд╣ рдХрд┐рддрдиреЗ рдЯрд░реНрдиреНрд╕ рдореЗрдВ рд╣реЛрдЧрд╛ред
*/

performCutting = function (inputString, m, n) {
    console.log("Function Starts.......");

    let counter = 0;  // рдпрд╣ рдЯрд░реНрдиреНрд╕ рдЧрд┐рдирдиреЗ рдХреЗ рд▓рд┐рдП рд╣реИ
    let tempString = "";  // рдЕрд╕реНрдерд╛рдпреА рд╕реНрдЯреНрд░рд┐рдВрдЧ рдЬрд┐рд╕реЗ рдмрд╛рд░-рдмрд╛рд░ рдмрджрд▓рд╛ рдЬрд╛рдПрдЧрд╛
    let newString = inputString;  // рдореМрдЬреВрджрд╛ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреА рдХреЙрдкреА
    
    console.log("Original String :: ", counter, " :: ", newString);

    let mapping = {
        "H": m,  // рд╣реИрд░реА рдХреЗ рд▓рд┐рдП рдХрдЯ рд╕рд╛рдЗрдЬ
        "R": n   // рдкреЙрдЯрд░ рдХреЗ рд▓рд┐рдП рдХрдЯ рд╕рд╛рдЗрдЬ
    };
    
    let flag = "H";  // рдкрд╣рд▓реЗ рд╣реИрд░реА рдХреА рдмрд╛рд░реА рд╣реЛрдЧреА
    
    while (tempString != inputString) {  // рдЬрдм рддрдХ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдЕрдкрдиреА рдореВрд▓ рд╕реНрдерд┐рддрд┐ рдореЗрдВ рдирд╛ рдЖ рдЬрд╛рдП
        counter++;  // рдЯрд░реНрди рдЧрд┐рдиреЛ

        // рдЕрдВрдд рд╕реЗ 'M' рдпрд╛ 'N' рдЕрдХреНрд╖рд░ рдХрд╛рдЯреЛ
        let endString = newString.slice(-(mapping[flag]));  
        
        // рдмрдЪрд╛ рд╣реБрдЖ рднрд╛рдЧ рд▓реЛ
        let beginningString = newString.slice(0, newString.length - mapping[flag]);
        
        // рдирдП рдХреНрд░рдо рдореЗрдВ рдЬреЛрдбрд╝реЛ (рдХрдЯреЗ рд╣реБрдП рдХреЛ рд╢реБрд░реБрдЖрдд рдореЗрдВ рдЬреЛрдбрд╝реЛ)
        tempString = endString + beginningString;
        
        console.log("New String :: ", counter, " :: ", tempString);

        // рдореМрдЬреВрджрд╛ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреЛ рдЕрдкрдбреЗрдЯ рдХрд░реЛ
        newString = tempString;

        // рдЯрд░реНрди рдмрджрд▓реЛ (рд╣реИрд░реА тЖТ рдкреЙрдЯрд░, рдкреЙрдЯрд░ тЖТ рд╣реИрд░реА)
        flag = (flag == "H") ? "R" : "H";
    }

    console.log("Turns required to Make Original String :: ", counter);
    console.log("Function Ends.......");
}

// рдлрдВрдХреНрд╢рди рдХреЛ рдХреЙрд▓ рдХрд░рдирд╛ (Test Cases)
console.clear();
performCutting("AbcDef", 2, 1);
console.log();
performCutting("AbcAbc", 2, 1);

/*
рдЙрджрд╛рд╣рд░рдг (Example)
рдЕрдЧрд░ рд╣рдо рдЗрд╕ рдлрдВрдХреНрд╢рди рдХреЛ рдРрд╕реЗ рдХреЙрд▓ рдХрд░реЗрдВ:

performCutting("AbcDef", 2, 1);
рд╕реНрдЯреЗрдк рдмрд╛рдп рд╕реНрдЯреЗрдк рдкреНрд░реЛрд╕реЗрд╕:
рдЯрд░реНрди	рдХрдЯрдиреЗ рд╡рд╛рд▓реЗ рдЕрдХреНрд╖рд░	рдирдИ рд╕реНрдЯреНрд░рд┐рдВрдЧ
0	-	AbcDef
1 (рд╣реИрд░реА)	ef (2 рдЕрдХреНрд╖рд░)	efAbcD
2 (рдкреЙрдЯрд░)	D (1 рдЕрдХреНрд╖рд░)	DefAbc
3 (рд╣реИрд░реА)	bc (2 рдЕрдХреНрд╖рд░)	bcDefA
4 (рдкреЙрдЯрд░)	A (1 рдЕрдХреНрд╖рд░)	AbcDef тЬЕ (рдореВрд▓ рд╕реНрдЯреНрд░рд┐рдВрдЧ рд╡рд╛рдкрд╕ рдорд┐рд▓ рдЧрдИ)
ЁЯФ╣ рдХреБрд▓ 4 рдЯрд░реНрди рдореЗрдВ рд╣рдо рд╡рд╛рдкрд╕ рдореВрд▓ рд╕реНрдЯреНрд░рд┐рдВрдЧ "AbcDef" рдкрд░ рдЖ рдЧрдПред

рдХреЛрдб рдореЗрдВ рдореБрдЦреНрдп рдмрд╛рддреЗрдВ (Key Takeaways)
тЬЕ рдореВрд▓ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреЛ рдмрд╛рд░-рдмрд╛рд░ рдореЛрдбрд┐рдлрд╛рдИ рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИред
тЬЕ while рд▓реВрдк рддрдм рддрдХ рдЪрд▓рддрд╛ рд╣реИ рдЬрдм рддрдХ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдЕрдкрдиреА рдореВрд▓ рд╕реНрдерд┐рддрд┐ рдореЗрдВ рдирд╛ рдЖ рдЬрд╛рдПред
тЬЕ рд╣рд░ рдЯрд░реНрди рдореЗрдВ 'M' рдФрд░ 'N' рд╡реИрдХрд▓реНрдкрд┐рдХ рд░реВрдк рд╕реЗ рдЙрдкрдпреЛрдЧ рдХрд┐рдП рдЬрд╛ рд░рд╣реЗ рд╣реИрдВред
тЬЕ рдЖрдЦрд┐рд░ рдореЗрдВ, рдЧрд┐рдирддреА рдмрддрд╛рдИ рдЬрд╛рддреА рд╣реИ рдХрд┐ рдХрд┐рддрдиреЗ рдЯрд░реНрди рд▓рдЧреЗред

рдирд┐рд╖реНрдХрд░реНрд╖ (Conclusion)
рдпрд╣ рдкреНрд░реЛрдЧреНрд░рд╛рдо рд╕реНрдЯреНрд░рд┐рдВрдЧ рдХреЛ рдмрд╛рд░-рдмрд╛рд░ рдореЙрдбрд┐рдлрд╛рдИ рдХрд░рдХреЗ рдЙрд╕рдХреА рдкреБрдирд░рд╛рд╡реГрддреНрддрд┐ (cycle detection) рдХреА рдЧрдгрдирд╛ рдХрд░рддрд╛ рд╣реИред
рдЗрд╕рдХрд╛ рдЙрдкрдпреЛрдЧ рд╕реНрдЯреНрд░рд┐рдВрдЧ рдореИрдирд┐рдкреБрд▓реЗрд╢рди рдФрд░ рдкреИрдЯрд░реНрди рд░рд┐рдХрдЧреНрдирд┐рд╢рди рдореЗрдВ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХрддрд╛ рд╣реИред ЁЯЪА
*/